# Name: totp.tf
# Owner: Saurav Mitra
# Description: This terraform config will create Vault TOTP Secrets Engine
# The TOTP secrets engine generates time-based credentials according to the TOTP standard.
# The secrets engine can also be used to generate a new key and validate passwords generated by that key.
# The TOTP secrets engine can act as both a Generator (like Google Authenticator) and a Provider (like the Google.com sign in service)



/*
# As a Provider
# =============
# The TOTP secrets engine can act as a TOTP provider. 
# In this mode, it can be used to generate new keys and validate passwords generated using those keys.

# Enable TOTP Provider
vault secrets enable -namespace=dev -path=totp totp
curl -H "X-Vault-Token: $VAULT_TOKEN" -H "X-Vault-Namespace: $VAULT_NAMESPACE" -X POST $VAULT_ADDR/v1/sys/mounts/totp -d '{"type": "totp"}'

# List Secrets Engines
vault secrets list -namespace=dev
curl -H "X-Vault-Token: $VAULT_TOKEN" -H "X-Vault-Namespace: $VAULT_NAMESPACE" -X GET $VAULT_ADDR/v1/sys/mounts

# Create Provider Key
vault write -namespace=dev totp/keys/appuser1 generate=true issuer=Vault account_name=appuser1@test.com
# barcode    iVBORw0KGgoAAAANSUhEUgAAAMgAAADIEAAAAADYoy0BAAAGYUlEQVR4nOyd7aobOwxFcy55/1fupYWBxFgjbcmle2CtH4VM/NWzkR1bkuf969cLjPjvXw8Avnn....==
# url        otpauth://totp/Vault:appuser1@test.com?algorithm=SHA1&digits=6&issuer=Vault&period=30&secret=E42WBP3LUOMJIYPNFGJNHFAF45O3ECDX
# To Generate QR Code PNG file
vault write -namespace=dev -field=barcode totp/keys/appuser1 generate=true issuer=Vault account_name=appuser1@test.com | base64 -d > appuser1.png
curl -H "X-Vault-Token: $VAULT_TOKEN" -H "X-Vault-Namespace: $VAULT_NAMESPACE" -X POST $VAULT_ADDR/v1/totp/keys/appuser1 -d '{"generate": true, "issuer": "Vault", "account_name": "appuser1@test.com"}'

# Read Provider Key
vault read -namespace=dev totp/keys/appuser1
curl -H "X-Vault-Token: $VAULT_TOKEN" -H "X-Vault-Namespace: $VAULT_NAMESPACE" -X GET $VAULT_ADDR/v1/totp/keys/appuser1

# List Provider Keys
vault list -namespace=dev totp/keys
curl -H "X-Vault-Token: $VAULT_TOKEN" -H "X-Vault-Namespace: $VAULT_NAMESPACE" -X LIST $VAULT_ADDR/v1/totp/keys



# As a Generator
# ==============
# The TOTP secrets engine can act as a TOTP code generator. In this mode, it can replace traditional TOTP generators like Google Authenticator.
# It provides an added layer of security since the ability to generate codes is guarded by policies and the entire process is audited.

# Enable TOTP Generator
vault secrets enable -namespace=dev -path=totp-gen totp
curl -H "X-Vault-Token: $VAULT_TOKEN" -H "X-Vault-Namespace: $VAULT_NAMESPACE" -X POST $VAULT_ADDR/v1/sys/mounts/totp-gen -d '{"type": "totp"}'

# List Secrets Engines
vault secrets list -namespace=dev
curl -H "X-Vault-Token: $VAULT_TOKEN" -H "X-Vault-Namespace: $VAULT_NAMESPACE" -X GET $VAULT_ADDR/v1/sys/mounts

# Create Generator Key
vault write -namespace=dev totp-gen/keys/appuser1 url="otpauth://totp/Vault:appuser1@test.com?algorithm=SHA1&digits=6&issuer=Vault&period=30&secret=E42WBP3LUOMJIYPNFGJNHFAF45O3ECDX"
curl -H "X-Vault-Token: $VAULT_TOKEN" -H "X-Vault-Namespace: $VAULT_NAMESPACE" -X POST $VAULT_ADDR/v1/totp-gen/keys/appuser1 -d '{"url": "otpauth://totp/Vault:appuser1@test.com?algorithm=SHA1&digits=6&issuer=Vault&period=30&secret=E42WBP3LUOMJIYPNFGJNHFAF45O3ECDX"}'

# Read Generator Key
vault read -namespace=dev totp-gen/keys/appuser1
curl -H "X-Vault-Token: $VAULT_TOKEN" -H "X-Vault-Namespace: $VAULT_NAMESPACE" -X GET $VAULT_ADDR/v1/totp-gen/keys/appuser1

# List Generator Keys
vault list -namespace=dev totp-gen/keys
curl -H "X-Vault-Token: $VAULT_TOKEN" -H "X-Vault-Namespace: $VAULT_NAMESPACE" -X LIST $VAULT_ADDR/v1/totp-gen/keys


# Generate a new time-based OTP
# -----------------------------
vault read -namespace=dev totp-gen/code/appuser1
# code    044563
curl -H "X-Vault-Token: $VAULT_TOKEN" -H "X-Vault-Namespace: $VAULT_NAMESPACE" -X GET $VAULT_ADDR/v1/totp-gen/code/appuser1

# Validate a TOTP code
# --------------------
vault write -namespace=dev totp/code/appuser1 code=044563
# valid    true
curl -H "X-Vault-Token: $VAULT_TOKEN" -H "X-Vault-Namespace: $VAULT_NAMESPACE" -X POST $VAULT_ADDR/v1/totp/code/appuser1 -d '{"code": "044563"}'



# Delete Provider Key
vault delete -namespace=dev totp/keys/appuser1
curl -H "X-Vault-Token: $VAULT_TOKEN" -H "X-Vault-Namespace: $VAULT_NAMESPACE" -X DELETE $VAULT_ADDR/v1/totp/keys/appuser1

# Disable TOTP Provider
vault secrets disable -namespace=dev totp
curl -H "X-Vault-Token: $VAULT_TOKEN" -H "X-Vault-Namespace: $VAULT_NAMESPACE" -X DELETE $VAULT_ADDR/v1/sys/mounts/totp

# Delete Generator Key
vault delete -namespace=dev totp-gen/keys/appuser1
curl -H "X-Vault-Token: $VAULT_TOKEN" -H "X-Vault-Namespace: $VAULT_NAMESPACE" -X DELETE $VAULT_ADDR/v1/totp-gen/keys/appuser1

# Disable TOTP Generator
vault secrets disable -namespace=dev totp-gen
curl -H "X-Vault-Token: $VAULT_TOKEN" -H "X-Vault-Namespace: $VAULT_NAMESPACE" -X DELETE $VAULT_ADDR/v1/sys/mounts/totp-gen
*/
